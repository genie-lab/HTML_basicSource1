* { margin: 0; outline: none;  font-size: 10pt; text-decoration-line: none;  color: rgb(70, 70, 70); }
/*테두리 속성 실습 확인시 table CSS 주석 처리 하세요*/
table, th, td { border-collapse: collapse; border-spacing: 0; border: 1px solid slateblue; padding:10px;}
th { background-color: hsla(330, 100%, 71%,0.8); color: white; text-align: center;}
h4 { margin-top:100px; background-color: rgba(106, 90, 205,1.0); color: rgb(255, 255, 255);  margin-bottom: 10px; font-size: 1.2em; padding: 5px;}

/********************************************************************/


/*position 속성*/
.position-exam { width: fit-content; border: 1px dashed royalblue; display:flex; padding:10px; } /*width: fit-content -> 가로싸이즈 지정: 컨텐츠만큼 가로 차지함. display:flex; 하위 수직정렬(div)을 가로정렬로 바꿈 == inline-block과 동일효과 */

/*transform */
.block { width: 300px; height: 200px;	margin: 30px; border:1px solid blue }
.myTranslate { width:150px; height: 100px; 	background-color: lightgreen;	transform: translate(50px, 70px); } /* 요소의 이동 */
.myScale1 { width:150px; height: 100px; 	background-color: lightgreen;	transform: scale(1, 1); } /* 요소의 확대 1:1  */
.myScale2 { width:150px; height: 100px; 	background-color: lightgreen;	transform: scale(1.2, 1.5); } /* 요소의 확대 */
.myScale3 { width:150px; height: 100px; 	background-color: lightgreen;	transform: scale(0.5, 0.7); } /* 요소의 축소 */
.myRotate1 { width:150px; height: 100px; 	background-color: lightgreen;	transform: rotate(30deg); } /* 요소의 회전 양수 - 시계방향 */
.myRotate2 { width:150px; height: 100px; 	background-color: lightgreen;	transform: rotate(-30deg); } /* 요소의 회전 음수 - 시계반대방향*/
.myRotateX { width:150px; height: 100px; 	background-color: lightgreen;	transform: rotateX(60deg); } /* 요소의 x축 납짝*/
.myRotateY { width:150px; height: 100px; 	background-color: lightgreen;	transform: rotateY(60deg); } /* 요소의 y축 납짝*/
.mySkewX { width:150px; height: 100px; 	background-color: lightgreen;	transform: skewX(30deg); } /* 요소의 중앙점을 기준으로 좌표축을 따라 각도만큼 기울임*/
.mySkewY { width:150px; height: 100px; 	background-color: lightgreen;	transform: skewY(30deg); } /* 요소의 중앙점을 기준으로 좌표축을 따라 각도만큼 기울임*/
.mySkew { width:150px; height: 100px; 	background-color: lightgreen;	transform: skew(30deg, 30deg); } /* 요소의 중앙점을 기준으로 좌표축을 따라 각도만큼 기울임*/
/*다중변형*/
.manytrans { width:150px; height: 100px; 	background-color: lightgreen;	
	transform: 
	translate(100px, 100px) 
	scale(1.5, 0.8) 
	rotate(30deg) 
	skew(40deg);  } /* 다중 변형 */

	
	/*transform-origin 속성 : 요소 박스의 변형 기준점 지정*/
	.myOrigin1 { width:150px; height: 100px; 	background-color: lightgreen;	transform:  rotate(30deg); transform-origin: left top ; } 
	.myOrigin2 { width:150px; height: 100px; 	background-color: lightgreen;	transform:  rotate(30deg); transform-origin: center center ; } 
	.myOrigin3 { width:150px; height: 100px; 	background-color: lightgreen;	transform:  rotate(30deg); transform-origin: right top ; } 
	.myOrigin4 { width:150px; height: 100px; 	background-color: lightgreen;	transform:  rotate(30deg); transform-origin: left bottom ; } 
	.myOrigin5 { width:150px; height: 100px; 	background-color: lightgreen;	transform:  rotate(30deg); transform-origin: right bottom ; } 
	
	/*transform-style : 3D 공간에서 하위 요소들의 렌더링 방식 지정
	변형이 적용된 좌표를 하위 요소에 전달할지 여부 지정
	• flat → 하위 요소는 3D 좌표를 유지하지 않고 2D 좌표 영역에 표시
	• preserve-3d → 하위 요소도 부모 요소의 3D 좌표를 유지하여 표시
	*/
	#div1 { width:150px; height: 100px; border:solid 1px black; 	background-color: rgb(236, 181, 220);	transform: rotateX(45deg); transform-style:  flat ; } 
	#div2 { width:150px; height: 100px; 	border:solid 1px black; background-color: rgb(255, 208, 0);	transform: translate(30px, 30px) rotateX(30deg);  } 
	#div3 { width:150px; height: 100px; border:solid 1px black; 	background-color: rgb(236, 181, 220);	transform: rotateX(45deg); transform-style:   preserve-3d ; } 
	#div4 { width:150px; height: 100px; 	border:solid 1px black; background-color: rgb(255, 208, 0);	transform: translate(70px, 70px) rotateX(30deg);  } 

